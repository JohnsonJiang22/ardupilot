# hw definition file for processing by chibios_hwdef.py for RocDrone H7

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 16000000

# board ID for firmware load
APJ_BOARD_ID 660

FLASH_SIZE_KB 2048

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O2

# ChibiOS system timer
STM32_ST_USE_TIMER 2

# bootloader takes first sector
FLASH_RESERVE_START_KB 128

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART2 USART3 UART4 UART8 UART7 OTG2

# default the 2nd interface to MAVLink2 until MissionPlanner updates drivers
define HAL_OTG2_PROTOCOL SerialProtocol_MAVLink2

# now we define the pins that USB is connected on
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# these are the pins for SWD debugging with a STlinkv2 or black-magic probe
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# SPI1 - internal imu sensors, BMI088 ICM-20649
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

# SPI2 - FRAM, FM25V05
PD3 SPI2_SCK SPI2
PC2 SPI2_MISO SPI2
PC1 SPI2_MOSI SPI2

# SPI3 - internal imu sensors, ADIS16470
PB3 SPI3_SCK SPI3
PB4 SPI3_MISO SPI3
PB2 SPI3_MOSI SPI3

# SPI4 - internal barometer, MS5611
PE2 SPI4_SCK SPI4
PE13 SPI4_MISO SPI4
PE14 SPI4_MOSI SPI4

PB5  ADIS16470_CS CS
PA4  ICM20649_CS CS SPEED_VERYLOW
PE10 BMI088_A_CS CS
PB1  BMI088_G_CS CS
PC3  FRAM_CS CS SPEED_VERYLOW
PE15 MS5611_CS CS

# I2C buses

# I2C1 for onboard mag
PB6 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

# I2C2 for external devices
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2

# order of I2C buses
I2C_ORDER I2C1 I2C2

define HAL_I2C_INTERNAL_MASK 1

# enable pins
PE4 VDD_3V3_SENSORS_EN OUTPUT LOW
PE3 VDD_3V3_SD_CARD_EN OUTPUT HIGH

# USART2 is telem1
PD6 USART2_RX USART2
PD5 USART2_TX USART2

# USART3 is GPS1
PD9 USART3_RX USART3 NODMA
PD8 USART3_TX USART3 NODMA

# UART4 GPS2
PD0 UART4_RX UART4 NODMA
PD1 UART4_TX UART4 NODMA

# UART8 is telem2
PE0 UART8_RX UART8
PE1 UART8_TX UART8

# UART7 is debug
PE7 UART7_RX UART7 NODMA
PE8 UART7_TX UART7 NODMA

# PWM channels
PA0  TIM5_CH1 TIM5 PWM(1) GPIO(50)
PA1  TIM5_CH2 TIM5 PWM(2) GPIO(51)
PA2  TIM5_CH3 TIM5 PWM(3) GPIO(52)
PA3  TIM5_CH4 TIM5 PWM(4) GPIO(53)
PD12 TIM4_CH1 TIM4 PWM(5) GPIO(54)
PD13 TIM4_CH2 TIM4 PWM(6) GPIO(55)
PD14 TIM4_CH3 TIM4 PWM(7) GPIO(56)
PD15 TIM4_CH4 TIM4 PWM(8) GPIO(57)

PE9  TIM1_CH1  TIM1  PWM(9)  GPIO(58)
PE11 TIM1_CH2  TIM1  PWM(10) GPIO(59)
PB14 TIM12_CH1 TIM12 PWM(11) GPIO(62) NODMA
PB15 TIM12_CH2 TIM12 PWM(12) GPIO(63) NODMA
PE5  TIM15_CH1 TIM15 PWM(13) GPIO(64)
PE6  TIM15_CH2 TIM15 PWM(14) GPIO(65)

# allow for 14 PWMs by default
define BOARD_PWM_COUNT_DEFAULT 14

# RC input
PC6 TIM3_CH1 TIM3 RCININT PULLUP LOW 

# analog in
PC4 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PB0 VDD_5V_SENS ADC1 SCALE(2)

# ADC3.3/ADC6.6
PC5 SPARE1_ADC1 ADC1 SCALE(1)
PC0 SPARE2_ADC1 ADC1 SCALE(2)

# CAN bus
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1

# 2nd CAN bus
PB12 CAN2_RX CAN2
PB13 CAN2_TX CAN2

PA9  nVBUS INPUT PULLUP

# drdy pins
PD7  DRDY1_ADIS16470 INPUT GPIO(93)

# use GPIO(93) for data ready on ADIS16470
define ADIS_DRDY_PIN 93

# SPI devices
SPIDEV adis16470      SPI3 DEVID1  ADIS16470_CS    MODE3  1*MHZ  2*MHZ
SPIDEV icm20649       SPI1 DEVID1  ICM20649_CS     MODE3  2*MHZ  8*MHZ
SPIDEV bmi088_a       SPI1 DEVID2  BMI088_A_CS     MODE3  10*MHZ 10*MHZ
SPIDEV bmi088_g       SPI1 DEVID3  BMI088_G_CS     MODE3  10*MHZ 10*MHZ
SPIDEV ms5611         SPI4 DEVID1  MS5611_CS       MODE3  20*MHZ 20*MHZ
SPIDEV ramtron        SPI2 DEVID1  FRAM_CS         MODE3  8*MHZ  8*MHZ 

# one baro
BARO MS56XX SPI:ms5611

# three IMUs
IMU ADIS1647x    SPI:adis16470 ROTATION_PITCH_180_YAW_270 ADIS_DRDY_PIN
IMU Invensensev2 SPI:icm20649 ROTATION_NONE
IMU BMI088 SPI:bmi088_a SPI:bmi088_g ROTATION_PITCH_180

define HAL_DEFAULT_INS_FAST_SAMPLE 5

# compasses
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
COMPASS IST8310 I2C:ALL_EXTERNAL:0x0E true  ROTATION_ROLL_180_YAW_90
COMPASS IST8310 I2C:ALL_INTERNAL:0x0E false ROTATION_ROLL_180

# microSD support
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1

# enable RAMTROM parameter storage
define HAL_STORAGE_SIZE 32768
define HAL_WITH_RAMTRON 1

# enable FAT filesystem support (needs a microSD defined via SDMMC)
define HAL_OS_FATFS_IO 1

define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

DMA_PRIORITY  ADC* SPI3* TIM*UP*
DMA_NOSHARE  SPI3* TIM*UP* 
